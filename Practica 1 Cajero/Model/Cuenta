package models;

    /**
    - Se ah transformado la clase "cuenta" a programacion generica
    - @author Karina Ramirez
    */

    public class Cuenta<T extends Number> {
    private String numeroCuenta;
    private String pin;
    private T saldo;
    private String titular;

    /**
    - Cosntructor de la clase Cuenta con programacion generica
    - "numeroCuenta" es el numero de identificacion de la cuenta
    - "pin" es el PIN de segurodad de la cuenta
    - "saldoInicial" parametro para el saldo inicial de la cuenta ya sea double, int, float
    - "titular" Nombre del titular de la cuenta
    - @author Karina Ramirez
    */

    public Cuenta( String numeroCuenta,
                   String pin,
                   T saldoInicial,
                   String titular ){
        this.numeroCuenta = numeroCuenta;
        this.pin = pin;
        this.saldo = saldoInicial;
        this.titular = titular;
    }
    public String getNumeroCuenta() {return numeroCuenta;}
    public String getPin() {return pin;}
    public T getSaldo() {return saldo;}
    public String getTitular() {return titular;}
    
    /**
    - Establece el saldo de la cuenta
    - "saldo" es el parametro para el saldo nuevo saldo de la cuenta
    - @author Karina Ramirez
    */

    public void setSaldo(T saldo){
        this.saldo = saldo;
    }

    /**
    - Valida si el PIN ingresado coincide con el PIN de la cuenta.
    - "pinIngresado" es el Pin que se tiene que validar
    - "return true" si el PIN es correcto
    - "return false" si el PIN es incorrecto
    - @author Karina Ramirez
    */

    public boolean validarPin(String pinIngresado){
        return this.pin.equals(pinIngresado);
    }

    /**
    - Realiza un retiro de la cuenta si hay saldo suficiente
    - "Cantidad" Cantidad de dinero a retirar
    - "return true" si el retiro fue exitoso
    - "return false" si no hay saldo suficiente
    - @author Karina Ramirez
    */

    public boolean retirar( T cantidad){
        if( cantidad.doubleValue() > 0 && cantidad.doubleValue() <= this.saldo.doubleValue() ){
            double nuevoSaldo = this.saldo.doubleValue() - cantidad.doubleValue();
            this.saldo = convertirSaldo(nuevoSaldo);
            return true;
        }
        return false;
    }

    /**
    - Realiza un deposito a la cuenta del usuario
    - "Cantidad" Cantidad de dinero que se va a depositar
    - @author Karina Ramirez
    */

    public void depositar(T cantidad){
        if(cantidad.doubleValue() > 0){
            double nuevoSaldo = this.saldo.doubleValue() + cantidad.doubleValue();
            this.saldo = convertirSaldo(nuevoSaldo);
        }
    }

    /**
    - Realiza una tranferencia de la cuenta del usuario a otra
    - "CuentaDestino" Cual es la cuenta a la que se le va a tranferir
    - "cantidad" Cantidad de dinero que se va a transferir
    - "return true" si la transferencia fue exitosa
    - "return false" si la operacion fue fallida
    - @author Karina Ramirez
    */

    public boolean transferir(cuenta<T> cuentaDestino, T cantidad){
        if (cantidad.doubleValue() <= 0 || cuentaDestino == null || this == cuentaDestino){
            return false;
        }
        if(retirar(cantidad)){
            cuentaDestino.depositar(cantidad);
            return true;
        }
        return false;
    }

    /**
    - Convierte un valor double al tipo generico T
    - "valor" parametro del valor double a convertir
    - "return valor" esta convertido al tipo T
    - @author Karina Ramirez
    */

    private T convertirSaldo(double valor){
        if(saldo instanceof double){
            return (T) double.value0f(valor);
        } else if (saldo instanceof Integer){
            return(T) Integer.Value0f((int) valor);
        }else if (saldo instanceof float){
            return (T) float.value0f((float)valor);
        }else if (saldo instanceof Long){
            return (T) Long.value0f((long)valor);
        }else{
            return (T) double.Value0f(valor);
        }
    }

    /**
    - Representacion en String de la cuenta
    - "return String" informacion de la cuenta
    - @author Karina Ramirez
    */

    @Override
    public String toString(){
        return "Cuenta{"+
                "numeroCuenta="+ numeroCuenta+"\"+
                ", Saldo="+saldo+
                ", titular="+titular+"\"+
                ", tipo="+saldo.getClass().getSimpleName()+
                "}";
    }
}
